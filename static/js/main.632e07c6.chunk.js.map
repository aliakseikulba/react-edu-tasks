{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h2/Affairs.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","styles","wrapper","contentWrapper","avatarBlock","src","avatar","alt","textBubble","messageBlock","userData","userName","name","userMessage","message","timeData","time","messageData","HW1","Affair","task","affair","status","priority","control","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","appWrapper","contentBlock","controlBlock","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","id","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","addInput","errorInput","buttonClass","addButton","errorButton","content","addFormBlock","value","placeholder","onChange","onKeyPress","e","key","errorTip","usersCount","GreetingContainer","users","addUserCallback","setName","setError","length","test","currentTarget","alert","HW3","setUsers","v1","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.632e07c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__2wTya\",\"contentWrapper\":\"Message_contentWrapper__2Tq9G\",\"avatarBlock\":\"Message_avatarBlock__3hD1-\",\"textBubble\":\"Message_textBubble__23agK\",\"messageBlock\":\"Message_messageBlock__3mqFX\",\"userData\":\"Message_userData__Tc13d\",\"userName\":\"Message_userName__3FYDl\",\"userMessage\":\"Message_userMessage__1I5Tp\",\"timeData\":\"Message_timeData__3ftyh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Greeting_wrapper__3Dbfg\",\"content\":\"Greeting_content__3021Y\",\"addFormBlock\":\"Greeting_addFormBlock__3IMpM\",\"addInput\":\"Greeting_addInput__B22fb\",\"errorInput\":\"Greeting_errorInput__2Khas\",\"addButton\":\"Greeting_addButton__hZEEl\",\"errorButton\":\"Greeting_errorButton__24CBC\",\"errorTip\":\"Greeting_errorTip__3zec7\",\"usersCount\":\"Greeting_usersCount__14bTL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affair_wrapper__1ds53\",\"task\":\"Affair_task__3MHEV\",\"status\":\"Affair_status__2y_NS\",\"control\":\"Affair_control__Xt0TM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affairs_wrapper__adwxm\",\"appWrapper\":\"Affairs_appWrapper__3y-r-\",\"contentBlock\":\"Affairs_contentBlock__y-XQN\",\"controlBlock\":\"Affairs_controlBlock__1rCv5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","import React from 'react';\nimport styles from './Message.module.css';\n\ntype MessageType = {\n  avatar: string\n  name: string\n  message: string\n  time: string\n}\n\nfunction Message(props: MessageType) {\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.contentWrapper}>\n        <div className={styles.avatarBlock}>\n          <img src={props.avatar} alt=\"user avatar\"/>\n        </div>\n        <div className={styles.textBubble}>\n          <div className={styles.messageBlock}>\n            <div className={styles.userData}>\n              <div className={styles.userName}>\n                {props.name}\n              </div>\n              <div className={styles.userMessage}>\n                {props.message}\n              </div>\n            </div>\n            <div className={styles.timeData}>\n              {props.time}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Message;\n","import React from 'react';\nimport Message from './Message';\n\nconst messageData = {\n  avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n  name: 'Rick Astley',\n  message: 'Never gonna give you up',\n  time: '13:12',\n};\n\nfunction HW1() {\n  return (\n    <div>\n      <Message\n        avatar={messageData.avatar}\n        name={messageData.name}\n        message={messageData.message}\n        time={messageData.time}\n      />\n    </div>\n  );\n}\n\nexport default HW1;\n","import React from 'react';\nimport {AffairType} from './HW2';\nimport styles from './Affair.module.css';\n\ntype AffairPropsType = {\n  // key не нужно типизировать\n  affair: AffairType // need to fix any\n  deleteAffairCallback: (id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n  const deleteCallback = () => {\n    props.deleteAffairCallback(props.affair._id);\n  };// need to fix\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.task}>{props.affair.name}</div>\n      <div className={styles.status}>{props.affair.priority}</div>\n      <div className={styles.control}>\n        <button onClick={deleteCallback}>X</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Affair;\n","import React from 'react';\nimport Affair from './Affair';\nimport {AffairType, FilterType} from './HW2';\nimport styles from './Affairs.module.css';\n\ntype AffairsPropsType = {\n  data: AffairType[]\n  setFilter: (filter: FilterType) => void\n  deleteAffairCallback: (id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n  const mappedAffairs = props.data.map((a: AffairType) => (\n    <Affair // should work\n      key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n      affair={a}\n      deleteAffairCallback={props.deleteAffairCallback}\n    />\n  ));\n\n  const setAll = () => {\n    props.setFilter('all');\n  };\n  const setHigh = () => {\n    props.setFilter('high');\n  };\n  const setMiddle = () => {\n    props.setFilter('middle');\n  };\n  const setLow = () => {\n    props.setFilter('low');\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.appWrapper}>\n        <div className={styles.contentBlock}>\n          {mappedAffairs}\n        </div>\n        <div className={styles.controlBlock}>\n          <button onClick={setAll}>All</button>\n          <button onClick={setHigh}>High</button>\n          <button onClick={setMiddle}>Middle</button>\n          <button onClick={setLow}>Low</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Affairs;\n","import React, {useState} from 'react';\nimport Affairs from './Affairs';\n\n// types\nexport type AffairPriorityType = 'low' | 'middle' | 'high';\nexport type AffairType = {\n  _id: number\n  name: string\n  priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [\n  {_id: 1, name: 'React', priority: 'high'},\n  {_id: 2, name: 'Anime', priority: 'low'},\n  {_id: 3, name: 'Games', priority: 'low'},\n  {_id: 4, name: 'Work', priority: 'high'},\n  {_id: 5, name: 'HTML & CSS', priority: 'middle'},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => {\n  if (filter === 'all') return affairs;\n  return affairs.filter((a: AffairType) => a.priority === filter)\n};\n\nexport const deleteAffair = (affairs: AffairType[], id: number): AffairType[] => {\n  return affairs.filter((a: AffairType) => a._id !== id)\n};\n\nfunction HW2() {\n  const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs);\n  const [filter, setFilter] = useState<FilterType>('all');\n\n  const filteredAffairs = filterAffairs(affairs, filter);\n  const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\n\n  return (\n    <div>\n      <Affairs\n        data={filteredAffairs}\n        setFilter={setFilter}\n        deleteAffairCallback={deleteAffairCallback}\n      />\n    </div>\n  );\n}\n\nexport default HW2;\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\nimport s from './Greeting.module.css';\n\ntype GreetingPropsType = {\n  name: string\n  setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n  addUser: () => void\n  error: string\n  totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n  {name, setNameCallback, addUser, error, totalUsers}\n) => {\n  const inputClass = error === '' ? s.addInput : s.errorInput;\n  const buttonClass = error === '' ? s.addButton : s.errorButton;\n\n  const onKeyPressHandle = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      addUser();\n    }\n  };\n\n  return (\n    <div className={s.wrapper}>\n      <div className={s.content}>\n      <div className={s.addFormBlock}>\n          <input\n            value={name}\n            placeholder='user name...'\n            onChange={setNameCallback}\n            className={inputClass}\n            onKeyPress={onKeyPressHandle}/>\n          <button className={buttonClass} onClick={addUser}>add</button>\n        <div className={s.errorTip}>{error}</div>\n        </div>\n        <div className={s.usersCount}>\n          <h1>number of users</h1>\n          <div>{totalUsers}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from 'react';\nimport Greeting from './Greeting';\nimport {UserType} from './HW3';\nimport {notStrictEqual} from 'assert';\n\ntype GreetingContainerPropsType = {\n  users: UserType[]\n  addUserCallback: (name: string) => void\n}\n\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\n  const [name, setName] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    const nameValidation = /^[a-zA-Z]{0,30}$/;\n    if (!nameValidation.test(e.currentTarget.value) && (e.currentTarget.value)) {\n      setError('You have entered invalid characters. Use only a-z (not case-sensitive, less then 30' +\n        ' characters).');\n      setName('');\n    } else {\n      setName(e.currentTarget.value);\n      setError('');\n    }\n  };\n\n  const addUser = () => {\n    if (name) {\n      addUserCallback(name);\n      alert(`Hello, ${name}!`);\n      setName('');\n    }\n  };\n\n  const totalUsers = users.length;\n\n  return (\n    <Greeting\n      name={name}\n      setNameCallback={setNameCallback}\n      addUser={addUser}\n      error={error}\n      totalUsers={totalUsers}\n    />\n  );\n};\n\nexport default GreetingContainer;\n","import React, {useState} from 'react';\nimport GreetingContainer from './GreetingContainer';\nimport {v1} from 'uuid';\n\n// types\nexport type UserType = {\n  _id: string\n  name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n  const [users, setUsers] = useState<UserType[]>([]);\n\n  const addUserCallback = (name: string) => {\n    setUsers([...users, {_id: v1(), name}]);\n  };\n\n  return (\n    <div>\n      <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n    </div>\n  );\n}\n\nexport default HW3;\n","import React from 'react';\nimport s from './App.module.css';\nimport HW1 from '../../../p2-homeworks/h1/HW1';\nimport HW2 from '../../../p2-homeworks/h2/HW2';\nimport HW3 from '../../../p2-homeworks/h3/HW3';\n\nfunction App() {\n  return (\n    <div className={s.App}>\n      <h2>Homework 1</h2>\n      <HW1/>\n      <h2>Homework 2</h2>\n      <HW2/>\n      <h2>Homework 3</h2>\n      <HW3/>\n      {/*<HW4/>*/}\n      {/*<HW5/>*/}\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}